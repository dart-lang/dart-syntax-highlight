>// Copyright 2022 The Chromium Authors. All rights reserved.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.line.double-slash.dart
>// Use of this source code is governed by a BSD-style license that can be
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.line.double-slash.dart
>// found in the LICENSE file.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.line.double-slash.dart
>
>/// Multiline dartdoc comment with triple backticks.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.block.documentation.dart
>///
#^^^ comment.block.documentation.dart
>/// ```
#^^^^^^^ comment.block.documentation.dart
>/// code
#^^^^ comment.block.documentation.dart
#    ^^^^ comment.block.documentation.dart variable.other.source.dart
>/// ```
#^^^^^^^ comment.block.documentation.dart
>///
#^^^ comment.block.documentation.dart
>/// ...
#^^^^^^^ comment.block.documentation.dart
>var doc1;
#^^^ storage.type.primitive.dart
#        ^ punctuation.terminator.dart
>
>/// Multiline dartdoc comment with unclosed triple backticks.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.block.documentation.dart
>///
#^^^ comment.block.documentation.dart
>/// ```
#^^^^^^^ comment.block.documentation.dart
>/// code
#^^^^ comment.block.documentation.dart
#    ^^^^ comment.block.documentation.dart variable.other.source.dart
>var doc2;
#^^^ storage.type.primitive.dart
#        ^ punctuation.terminator.dart
>
>/// Multiline dartdoc comment with unclosed backticks.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.block.documentation.dart
>///
#^^^ comment.block.documentation.dart
>/// `code
#^^^^^^^^^ comment.block.documentation.dart
>var doc3;
#^^^ storage.type.primitive.dart
#        ^ punctuation.terminator.dart
>
>/// Multiline dartdoc comment with indented code.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.block.documentation.dart
>///
#^^^ comment.block.documentation.dart
>///     code1
#^^^^^^^^ comment.block.documentation.dart
#        ^^^^^ comment.block.documentation.dart variable.other.source.dart
>///     code2
#^^^^^^^^ comment.block.documentation.dart
#        ^^^^^ comment.block.documentation.dart variable.other.source.dart
>///
#^^^ comment.block.documentation.dart
>///     code3
#^^^^^^^^ comment.block.documentation.dart
#        ^^^^^ comment.block.documentation.dart variable.other.source.dart
>///
#^^^ comment.block.documentation.dart
>/// ...
#^^^^^^^ comment.block.documentation.dart
>var doc4;
#^^^ storage.type.primitive.dart
#        ^ punctuation.terminator.dart
>
>/** Block dartdoc comment with triple backticks.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.block.documentation.dart
> *
#^^ comment.block.documentation.dart
> * ```
#^^^^^^ comment.block.documentation.dart
> * code
#^^^ comment.block.documentation.dart
#   ^^^^ comment.block.documentation.dart variable.other.source.dart
> * ```
#^^^^^^ comment.block.documentation.dart
> *
#^^ comment.block.documentation.dart
> * ...
#^^^^^^ comment.block.documentation.dart
> */
#^^^ comment.block.documentation.dart
>var blockDoc1;
#^^^ storage.type.primitive.dart
#             ^ punctuation.terminator.dart
>
>/** Block dartdoc comment with unclosed triple backticks.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.block.documentation.dart
> *
#^^ comment.block.documentation.dart
> * ```
#^^^^^^ comment.block.documentation.dart
> * code
#^^^ comment.block.documentation.dart
#   ^^^^ comment.block.documentation.dart variable.other.source.dart
> */
#^^^ comment.block.documentation.dart
>var blockDoc2;
#^^^ storage.type.primitive.dart
#             ^ punctuation.terminator.dart
>
>/** Block dartdoc comment with unclosed backticks.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.block.documentation.dart
> *
#^^ comment.block.documentation.dart
> * `code
#^^^^^^^^ comment.block.documentation.dart
> */
#^^^ comment.block.documentation.dart
>var blockDoc3;
#^^^ storage.type.primitive.dart
#             ^ punctuation.terminator.dart
>
>/** Block dartdoc comment with indented code.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.block.documentation.dart
> *
#^^ comment.block.documentation.dart
> *     code1
#^^^^^^^ comment.block.documentation.dart
#       ^^^^^ comment.block.documentation.dart variable.other.source.dart
> *     code2
#^^^^^^^ comment.block.documentation.dart
#       ^^^^^ comment.block.documentation.dart variable.other.source.dart
> *
#^^ comment.block.documentation.dart
> *     code3
#^^^^^^^ comment.block.documentation.dart
#       ^^^^^ comment.block.documentation.dart variable.other.source.dart
> *
#^^ comment.block.documentation.dart
> * ...
#^^^^^^ comment.block.documentation.dart
> */
#^^^ comment.block.documentation.dart
>var blockDoc4;
#^^^ storage.type.primitive.dart
#             ^ punctuation.terminator.dart
>
>/// ``
#^^^^^^ comment.block.documentation.dart
>var noInlineCode;
#^^^ storage.type.primitive.dart
#                ^ punctuation.terminator.dart
>
>/// `Stream<int>`
#^^^^ comment.block.documentation.dart
#    ^^^^^^^^^^^^^ comment.block.documentation.dart variable.other.source.dart
>var inlineCode;
#^^^ storage.type.primitive.dart
#              ^ punctuation.terminator.dart
>
>/// ` `
#^^^^ comment.block.documentation.dart
#    ^^^ comment.block.documentation.dart variable.other.source.dart
>var inlineCodeJustWhitespace;
#^^^ storage.type.primitive.dart
#                            ^ punctuation.terminator.dart
>
>/*
#^^ comment.block.dart
> * Old-style dartdoc
#^^^^^^^^^^^^^^^^^^^^ comment.block.dart
> *
#^^ comment.block.dart
> * ...
#^^^^^^ comment.block.dart
> */
#^^^ comment.block.dart
>var b;
#^^^ storage.type.primitive.dart
#     ^ punctuation.terminator.dart
>
>/* Inline block comment */
#^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.block.dart
>var c;
#^^^ storage.type.primitive.dart
#     ^ punctuation.terminator.dart
>
>/**
#^^^ comment.block.documentation.dart
> * Nested block
#^^^^^^^^^^^^^^^ comment.block.documentation.dart
> *
#^^ comment.block.documentation.dart
> * /**
#^^^^^^ comment.block.documentation.dart
> *  * Nested block
#^^^^^^^^^^^^^^^^^^ comment.block.documentation.dart
> *  */
#^^^^^^ comment.block.documentation.dart
> */
#^^^ comment.block.documentation.dart
>var d;
#^^^ storage.type.primitive.dart
#     ^ punctuation.terminator.dart
>
>/**
#^^^ comment.block.documentation.dart
> * Nested
#^^^^^^^^^ comment.block.documentation.dart
> *
#^^ comment.block.documentation.dart
> * /* Inline */
#^^^ comment.block.documentation.dart
#   ^^^^^^^^^^^^ comment.block.documentation.dart comment.block.dart
> */
#^^^ comment.block.documentation.dart
>var e;
#^^^ storage.type.primitive.dart
#     ^ punctuation.terminator.dart
>
>/* Nested /* Inline */ */
#^^^^^^^^^^^^^^^^^^^^^^^^^ comment.block.dart
>var f;
#^^^ storage.type.primitive.dart
#     ^ punctuation.terminator.dart
>
>// Simple comment
#^^^^^^^^^^^^^^^^^ comment.line.double-slash.dart
>var g;
#^^^ storage.type.primitive.dart
#     ^ punctuation.terminator.dart
>
>/// Dartdoc with reference to [a].
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment.block.documentation.dart
#                              ^^^ comment.block.documentation.dart variable.name.source.dart
#                                 ^ comment.block.documentation.dart
>/// And a link to [example.org](http://example.org/).
#^^^^^^^^^^^^^^^^^^ comment.block.documentation.dart
#                  ^^^^^^^^^^^^^ comment.block.documentation.dart variable.name.source.dart
#                               ^^^^^^^^^^^^^^^^^^^^^^ comment.block.documentation.dart
>var h;
#^^^ storage.type.primitive.dart
#     ^ punctuation.terminator.dart
>
>class A<T /* comment */ > {
#^^^^^ keyword.declaration.dart
#      ^ support.class.dart
#       ^ other.source.dart
#        ^ support.class.dart
#          ^^^^^^^^^^^^^ comment.block.dart
#                        ^ other.source.dart
>  void b<T /* comment */ >() {}
#  ^^^^ storage.type.primitive.dart
#        ^ keyword.operator.comparison.dart
#         ^ support.class.dart
#           ^^^^^^^^^^^^^ comment.block.dart
#                         ^ keyword.operator.comparison.dart
>  Future<T /* comment */ > c() {}
#  ^^^^^^ support.class.dart
#        ^ other.source.dart
#         ^ support.class.dart
#           ^^^^^^^^^^^^^ comment.block.dart
#                         ^ other.source.dart
#                           ^ entity.name.function.dart
>}
